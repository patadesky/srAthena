//===== rAthena Script ======================================= 
//= Banker Script 
//===== By: ================================================== 
//= Syrus22 (1.0)
//===== Current Version: ===================================== 
//= 2.0
//===== Compatible With: ===================================== 
//= Any rAthena version with Account variables.
//===== Description: ========================================= 
//= An account wide Banker to store Zeny
//===== Additional Comments: ================================= 
//= Syrus22 - There's an optional transaction fee at the top of
//= the script. To use it simply change the first set command
//= to set the cost variable to whatever you want the fee to be.
//= Version 2.0: Optimized and brought the script up to standard. [Jguy]
//============================================================ 

prontera,132,217,5	script	Banker	109,{
set @cost,500;
mes "[Banquero]";
mes "Bienvenido al Primer Banco de Prontera. ¿Cómo puedo ayudarle?";
next;
switch(select("Me gustaría hace un depósito.:Me gustaría hacer un retiro.:¿Cuál es mi saldo actual?:Cancelar")) {
	case 1:
		mes "[Banquero]";
		mes "Muy bien ... ¿Cuánto le gustaría depositar? El máximo que se puede depositar a la vez es 999,999 Zeny.";
		next;
		if (@cost > 0) {
			mes "[Banquero]";
			mes "Ah, Y por realizar esto tendrá una tarifa de " +@cost + " Zeny cargada en todas sus transacciones!";
			next;
		}
		input @deposit;
		if (@deposit < 1) {
			mes "Make sure you ask me to deposit a real amount.";
			close;
		}
		else if (@deposit > Zeny) {
			mes "Me parece que no posee la cantidad de Zeny que desea depositar!";
			close;
		}
		else if (@deposit > (Zeny - @cost)) {
			mes "Usted necesita " + @cost + " Zeny Para cubrir la tarifa de la transacción!";
			close;
		}
		else {
		set Zeny,Zeny - @deposit;
		set Zeny,Zeny - @cost;
		set #bankstorage,#bankstorage + @deposit;
		mes "[Banquero]";
		mes "Muchas gracias... Sus zeny's están en buenas manos.";
		close;
		}

	case 2:
		mes "[Banquero]";
		mes "Muy bien... Cuánto dinero le gustaría retirar? Lo máximo que usted puede retirar a la ves es 999,999 Zeny";
		next;
		if (@cost > 0) {
			mes "[Banquero]";
			mes "Ah, Y por realizar esto tendrá una tarifa de " +@cost + " Zeny cargada en todas sus transacciones!";
			next;
		}
		input @withdrawl;
		if (@withdrawl < 1) {
			mes "Por favor, No jueges conmigo. Necesito un monto real para retirar.";
			close;
		}
		else if (@withdrawl > #bankstorage) {
			mes "Le mostraré, usted solo tiene ^00FF00" + #bankstorage +"^000000 zeny en su cuenta!";
			close;
		}
		else if ((@cost > Zeny) && ((Zeny + @withdrawl) > @cost)) {
			mes "[Banquero]";
			mes "Usted no tiene Zeny necesarios para la tarifa de transacción en este momento. Le gustaría que yo tomase la tarifa directamente de su retiro?";
			next;
			switch(select("Si por favor.:No, Gracias")){
			case 1:
				mes "[Banquero]";
				mes "Sacaré " + @cost + " Por su retiro de dinero para cubrir la tarifa del depósito...";
				set @withdrawl,@withdrawl - @cost;
				set #bankstorage,#bankstorage - @cost;
				set @cost,0;
				next;
				set Zeny,Zeny - @cost;
				set Zeny,Zeny + @withdrawl;
				set #bankstorage,#bankstorage - @withdrawl;
				mes "[Baquero]";
				mes "Ahí están sus Zeny. Que tenga un buen día";
				close;
			case 2:
				mes "[Banquero]";
				mes "Muy bien... Vuelva pronto.";
				close;
			}
		}
		else {
			set Zeny,Zeny - @cost;
			set Zeny,Zeny + @withdrawl;
			set #bankstorage,#bankstorage - @withdrawl;
			mes "[Banquero]";
			mes "Ahí están sus Zeny. Que tenga un buen día.";
			close;
		}
	case 3:
		mes "[Banquero]";
		mes "Hmmmm déjame revisar unos papeles.";
		next;
		mes "*susurro*, susurro*";
		next;
		mes "[Banquero]";
		mes "Actualmente tiene " + #bankstorage + " Zeny en su cuenta.";
		close;
	case 4:
		mes "[Banquero]";
		mes "Muy bien... Vuelva pronto.";
		close;
	}
}
